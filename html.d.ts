/// <reference types="mithril" />
import * as Mithril from './node_modules/@types/mithril/index';
export declare const setHyperscriptFunction: (f: Mithril.Hyperscript) => Mithril.Hyperscript;
export declare const a: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLAnchorElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const abbr: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const acronym: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const address: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const applet: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLAppletElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const area: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLAreaElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const article: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const aside: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const audio: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLAudioElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const b: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const base: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLBaseElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const basefont: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLBaseFontElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const bdo: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const big: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const blockquote: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLQuoteElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const body: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLBodyElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const br: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLBRElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const button: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLButtonElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const canvas: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLCanvasElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const caption: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableCaptionElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const center: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const circle: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGCircleElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const cite: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const clippath: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGClipPathElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const code: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const col: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableColElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const colgroup: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableColElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const data: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLDataElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const datalist: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLDataListElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const dd: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const defs: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGDefsElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const del: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLModElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const desc: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGDescElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const dfn: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const dir: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLDirectoryElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const div: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLDivElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const dl: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLDListElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const dt: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const ellipse: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGEllipseElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const em: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const embed: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLEmbedElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const feblend: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEBlendElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fecolormatrix: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEColorMatrixElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fecomponenttransfer: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEComponentTransferElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fecomposite: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFECompositeElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const feconvolvematrix: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEConvolveMatrixElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fediffuselighting: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEDiffuseLightingElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fedisplacementmap: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEDisplacementMapElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fedistantlight: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEDistantLightElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const feflood: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEFloodElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fefunca: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEFuncAElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fefuncb: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEFuncBElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fefuncg: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEFuncGElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fefuncr: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEFuncRElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fegaussianblur: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEGaussianBlurElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const feimage: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEImageElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const femerge: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEMergeElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const femergenode: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEMergeNodeElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const femorphology: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEMorphologyElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const feoffset: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEOffsetElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fepointlight: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFEPointLightElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fespecularlighting: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFESpecularLightingElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fespotlight: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFESpotLightElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fetile: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFETileElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const feturbulence: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFETurbulenceElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const fieldset: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLFieldSetElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const figcaption: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const figure: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const filter: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGFilterElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const font: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLFontElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const footer: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const foreignobject: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGForeignObjectElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const form: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLFormElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const frame: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLFrameElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const frameset: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLFrameSetElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const g: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGGElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const h1: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLHeadingElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const h2: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLHeadingElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const h3: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLHeadingElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const h4: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLHeadingElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const h5: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLHeadingElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const h6: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLHeadingElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const head: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLHeadElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const header: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const hgroup: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const hr: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLHRElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const html: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLHtmlElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const i: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const iframe: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLIFrameElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const image: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGImageElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const img: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLImageElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const input: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLInputElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const ins: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLModElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const isindex: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLUnknownElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const kbd: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const keygen: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const label: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLLabelElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const legend: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLLegendElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const li: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLLIElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const line: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGLineElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const lineargradient: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGLinearGradientElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const link: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLLinkElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const listing: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLPreElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const map: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLMapElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const mark: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const marker: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGMarkerElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const marquee: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLMarqueeElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const mask: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGMaskElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const menu: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLMenuElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const meta: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLMetaElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const metadata: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGMetadataElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const meter: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLMeterElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const nav: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const nextid: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLUnknownElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const nobr: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const noframes: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const noscript: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const object: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLObjectElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const ol: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLOListElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const optgroup: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLOptGroupElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const option: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLOptionElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const output: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLOutputElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const p: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLParagraphElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const param: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLParamElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const path: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGPathElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const pattern: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGPatternElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const picture: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLPictureElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const plaintext: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const polygon: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGPolygonElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const polyline: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGPolylineElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const pre: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLPreElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const progress: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLProgressElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const q: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLQuoteElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const radialgradient: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGRadialGradientElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const rect: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGRectElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const rt: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const ruby: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const s: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const samp: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const script: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLScriptElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const section: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const select: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLSelectElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const small: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const source: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLSourceElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const span: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLSpanElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const stop: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGStopElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const strike: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const strong: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const style: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLStyleElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const sub: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const sup: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const svg: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGSVGElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const symbol: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGSymbolElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const table: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const tbody: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableSectionElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const td: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableDataCellElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const template: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTemplateElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const text: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGTextElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const textpath: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGTextPathElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const textarea: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTextAreaElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const tfoot: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableSectionElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const th: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableHeaderCellElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const thead: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableSectionElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const time: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTimeElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const title: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTitleElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const tr: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTableRowElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const track: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLTrackElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const tspan: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGTSpanElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const tt: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const u: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const ul: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLUListElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const use: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGUseElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const video: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLVideoElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const view: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<SVGViewElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const wbr: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare const xmp: (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<HTMLPreElement>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare function tag<TagNameType extends keyof ElementTagNameMap, ElementType extends ElementTagNameMap[TagNameType]>(tagName: TagNameType): (properties?: string | number | boolean | Mithril.Vnode<any, any> | Mithril.ChildArray | Properties<ElementType>, ...children: Mithril.Children[]) => Mithril.Vnode<any, any>;
export declare type Properties<ElementType> = CustomProperties & RecursivePartial<ElementType>;
export declare type CustomProperties = {
    key?: number | string;
    class?: string;
    oninit?(node?: ComponentNode): void;
    oncreate?(node?: ComponentNode): void;
    onbeforeupdate?(newNode?: ComponentNode, oldNode?: ComponentNode): void | boolean;
    onupdate?(node?: ComponentNode): void;
    onbeforeremove?(node?: ComponentNode): void | Promise<any>;
    onremove?(node?: ComponentNode): void;
};
export declare type RecursivePartial<T> = {
    [P in keyof T]?: RecursivePartial<T[P]>;
};
export declare type ComponentNode = Mithril.Vnode<any, any> & {
    dom: HTMLElement;
};
